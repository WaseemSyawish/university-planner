"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_api-node_lib_attendanceFallback_js";
exports.ids = ["_api-node_lib_attendanceFallback_js"];
exports.modules = {

/***/ "(api-node)/./lib/attendanceFallback.js":
/*!***********************************!*\
  !*** ./lib/attendanceFallback.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst dataFile = path.join(process.cwd(), 'data', 'attendance.json');\nfunction ensureFile() {\n    const dir = path.dirname(dataFile);\n    if (!fs.existsSync(dir)) fs.mkdirSync(dir, {\n        recursive: true\n    });\n    if (!fs.existsSync(dataFile)) fs.writeFileSync(dataFile, JSON.stringify({\n        sessions: []\n    }, null, 2));\n}\nfunction read() {\n    ensureFile();\n    return JSON.parse(fs.readFileSync(dataFile, 'utf8'));\n}\nfunction write(obj) {\n    fs.writeFileSync(dataFile, JSON.stringify(obj, null, 2));\n}\nmodule.exports = {\n    list ({ courseId, userId } = {}) {\n        const obj = read();\n        return obj.sessions.filter((s)=>s.course_id === courseId && s.user_id === userId).sort((a, b)=>new Date(a.date) - new Date(b.date));\n    },\n    create (payload) {\n        const obj = read();\n        const id = String(Date.now()) + Math.floor(Math.random() * 1000);\n        const now = new Date().toISOString();\n        const session = {\n            id,\n            date: new Date(payload.date).toISOString(),\n            status: payload.status?.toUpperCase() || 'PRESENT',\n            points: payload.points ?? 0,\n            notes: payload.notes || null,\n            user_id: payload.userId,\n            course_id: payload.courseId,\n            created_at: now,\n            updated_at: now\n        };\n        obj.sessions.push(session);\n        write(obj);\n        return session;\n    },\n    find (id) {\n        const obj = read();\n        return obj.sessions.find((s)=>s.id === id);\n    },\n    update (id, payload) {\n        const obj = read();\n        const idx = obj.sessions.findIndex((s)=>s.id === id);\n        if (idx === -1) return null;\n        const existing = obj.sessions[idx];\n        const updated = {\n            ...existing,\n            date: payload.date ? new Date(payload.date).toISOString() : existing.date,\n            status: payload.status ? payload.status.toUpperCase() : existing.status,\n            points: payload.points !== undefined ? payload.points : existing.points,\n            notes: payload.notes !== undefined ? payload.notes : existing.notes,\n            updated_at: new Date().toISOString()\n        };\n        obj.sessions[idx] = updated;\n        write(obj);\n        return updated;\n    },\n    delete (id) {\n        const obj = read();\n        const idx = obj.sessions.findIndex((s)=>s.id === id);\n        if (idx === -1) return null;\n        const [deleted] = obj.sessions.splice(idx, 1);\n        write(obj);\n        return deleted;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNDLFdBQVcsS0FBS1UsU0FBU1gsTUFBTTtZQUN2RUUsUUFBUVgsUUFBUVcsTUFBTSxLQUFLVyxZQUFZdEIsUUFBUVcsTUFBTSxHQUFHUyxTQUFTVCxNQUFNO1lBQ3ZFQyxPQUFPWixRQUFRWSxLQUFLLEtBQUtVLFlBQVl0QixRQUFRWSxLQUFLLEdBQUdRLFNBQVNSLEtBQUs7WUFDbkVFLFlBQVksSUFBSWpCLE9BQU9VLFdBQVc7UUFDcEM7UUFDQXZCLElBQUlMLFFBQVEsQ0FBQ3VDLElBQUksR0FBR0c7UUFDcEJ0QyxNQUFNQztRQUNOLE9BQU9xQztJQUNUO0lBQ0FFLFFBQU90QixFQUFFO1FBQ1AsTUFBTWpCLE1BQU1KO1FBQ1osTUFBTXNDLE1BQU1sQyxJQUFJTCxRQUFRLENBQUN3QyxTQUFTLENBQUM1QixDQUFBQSxJQUFLQSxFQUFFVSxFQUFFLEtBQUtBO1FBQ2pELElBQUlpQixRQUFRLENBQUMsR0FBRyxPQUFPO1FBQ3ZCLE1BQU0sQ0FBQ00sUUFBUSxHQUFHeEMsSUFBSUwsUUFBUSxDQUFDOEMsTUFBTSxDQUFDUCxLQUFLO1FBQzNDbkMsTUFBTUM7UUFDTixPQUFPd0M7SUFDVDtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluaXN0cmF0b3JcXERlc2t0b3BcXHVuaXZlcnNpdHktcGxhbm5lclxcbGliXFxhdHRlbmRhbmNlRmFsbGJhY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5cclxuY29uc3QgZGF0YUZpbGUgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2RhdGEnLCAnYXR0ZW5kYW5jZS5qc29uJyk7XHJcblxyXG5mdW5jdGlvbiBlbnN1cmVGaWxlKCkge1xyXG4gIGNvbnN0IGRpciA9IHBhdGguZGlybmFtZShkYXRhRmlsZSk7XHJcbiAgaWYgKCFmcy5leGlzdHNTeW5jKGRpcikpIGZzLm1rZGlyU3luYyhkaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xyXG4gIGlmICghZnMuZXhpc3RzU3luYyhkYXRhRmlsZSkpIGZzLndyaXRlRmlsZVN5bmMoZGF0YUZpbGUsIEpTT04uc3RyaW5naWZ5KHsgc2Vzc2lvbnM6IFtdIH0sIG51bGwsIDIpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVhZCgpIHtcclxuICBlbnN1cmVGaWxlKCk7XHJcbiAgcmV0dXJuIEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGRhdGFGaWxlLCAndXRmOCcpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gd3JpdGUob2JqKSB7XHJcbiAgZnMud3JpdGVGaWxlU3luYyhkYXRhRmlsZSwgSlNPTi5zdHJpbmdpZnkob2JqLCBudWxsLCAyKSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGxpc3QoeyBjb3Vyc2VJZCwgdXNlcklkIH0gPSB7fSkge1xyXG4gICAgY29uc3Qgb2JqID0gcmVhZCgpO1xyXG4gICAgcmV0dXJuIG9iai5zZXNzaW9ucy5maWx0ZXIocyA9PiBzLmNvdXJzZV9pZCA9PT0gY291cnNlSWQgJiYgcy51c2VyX2lkID09PSB1c2VySWQpLnNvcnQoKGEsYikgPT4gbmV3IERhdGUoYS5kYXRlKSAtIG5ldyBEYXRlKGIuZGF0ZSkpO1xyXG4gIH0sXHJcbiAgY3JlYXRlKHBheWxvYWQpIHtcclxuICAgIGNvbnN0IG9iaiA9IHJlYWQoKTtcclxuICAgIGNvbnN0IGlkID0gU3RyaW5nKERhdGUubm93KCkpICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMCk7XHJcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XHJcbiAgICBjb25zdCBzZXNzaW9uID0ge1xyXG4gICAgICBpZCxcclxuICAgICAgZGF0ZTogKG5ldyBEYXRlKHBheWxvYWQuZGF0ZSkpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIHN0YXR1czogcGF5bG9hZC5zdGF0dXM/LnRvVXBwZXJDYXNlKCkgfHwgJ1BSRVNFTlQnLFxyXG4gICAgICBwb2ludHM6IHBheWxvYWQucG9pbnRzID8/IDAsXHJcbiAgICAgIG5vdGVzOiBwYXlsb2FkLm5vdGVzIHx8IG51bGwsXHJcbiAgICAgIHVzZXJfaWQ6IHBheWxvYWQudXNlcklkLFxyXG4gICAgICBjb3Vyc2VfaWQ6IHBheWxvYWQuY291cnNlSWQsXHJcbiAgICAgIGNyZWF0ZWRfYXQ6IG5vdyxcclxuICAgICAgdXBkYXRlZF9hdDogbm93XHJcbiAgICB9O1xyXG4gICAgb2JqLnNlc3Npb25zLnB1c2goc2Vzc2lvbik7XHJcbiAgICB3cml0ZShvYmopO1xyXG4gICAgcmV0dXJuIHNlc3Npb247XHJcbiAgfSxcclxuICBmaW5kKGlkKSB7XHJcbiAgICBjb25zdCBvYmogPSByZWFkKCk7XHJcbiAgICByZXR1cm4gb2JqLnNlc3Npb25zLmZpbmQocyA9PiBzLmlkID09PSBpZCk7XHJcbiAgfSxcclxuICB1cGRhdGUoaWQsIHBheWxvYWQpIHtcclxuICAgIGNvbnN0IG9iaiA9IHJlYWQoKTtcclxuICAgIGNvbnN0IGlkeCA9IG9iai5zZXNzaW9ucy5maW5kSW5kZXgocyA9PiBzLmlkID09PSBpZCk7XHJcbiAgICBpZiAoaWR4ID09PSAtMSkgcmV0dXJuIG51bGw7XHJcbiAgICBjb25zdCBleGlzdGluZyA9IG9iai5zZXNzaW9uc1tpZHhdO1xyXG4gICAgY29uc3QgdXBkYXRlZCA9IHtcclxuICAgICAgLi4uZXhpc3RpbmcsXHJcbiAgICAgIGRhdGU6IHBheWxvYWQuZGF0ZSA/IChuZXcgRGF0ZShwYXlsb2FkLmRhdGUpKS50b0lTT1N0cmluZygpIDogZXhpc3RpbmcuZGF0ZSxcclxuICAgICAgc3RhdHVzOiBwYXlsb2FkLnN0YXR1cyA/IHBheWxvYWQuc3RhdHVzLnRvVXBwZXJDYXNlKCkgOiBleGlzdGluZy5zdGF0dXMsXHJcbiAgICAgIHBvaW50czogcGF5bG9hZC5wb2ludHMgIT09IHVuZGVmaW5lZCA/IHBheWxvYWQucG9pbnRzIDogZXhpc3RpbmcucG9pbnRzLFxyXG4gICAgICBub3RlczogcGF5bG9hZC5ub3RlcyAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZC5ub3RlcyA6IGV4aXN0aW5nLm5vdGVzLFxyXG4gICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgIH07XHJcbiAgICBvYmouc2Vzc2lvbnNbaWR4XSA9IHVwZGF0ZWQ7XHJcbiAgICB3cml0ZShvYmopO1xyXG4gICAgcmV0dXJuIHVwZGF0ZWQ7XHJcbiAgfSxcclxuICBkZWxldGUoaWQpIHtcclxuICAgIGNvbnN0IG9iaiA9IHJlYWQoKTtcclxuICAgIGNvbnN0IGlkeCA9IG9iai5zZXNzaW9ucy5maW5kSW5kZXgocyA9PiBzLmlkID09PSBpZCk7XHJcbiAgICBpZiAoaWR4ID09PSAtMSkgcmV0dXJuIG51bGw7XHJcbiAgICBjb25zdCBbZGVsZXRlZF0gPSBvYmouc2Vzc2lvbnMuc3BsaWNlKGlkeCwgMSk7XHJcbiAgICB3cml0ZShvYmopO1xyXG4gICAgcmV0dXJuIGRlbGV0ZWQ7XHJcbiAgfVxyXG59O1xyXG4iXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicGF0aCIsImRhdGFGaWxlIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJlbnN1cmVGaWxlIiwiZGlyIiwiZGlybmFtZSIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJ3cml0ZUZpbGVTeW5jIiwiSlNPTiIsInN0cmluZ2lmeSIsInNlc3Npb25zIiwicmVhZCIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwid3JpdGUiLCJvYmoiLCJtb2R1bGUiLCJleHBvcnRzIiwibGlzdCIsImNvdXJzZUlkIiwidXNlcklkIiwiZmlsdGVyIiwicyIsImNvdXJzZV9pZCIsInVzZXJfaWQiLCJzb3J0IiwiYSIsImIiLCJEYXRlIiwiZGF0ZSIsImNyZWF0ZSIsInBheWxvYWQiLCJpZCIsIlN0cmluZyIsIm5vdyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRvSVNPU3RyaW5nIiwic2Vzc2lvbiIsInN0YXR1cyIsInRvVXBwZXJDYXNlIiwicG9pbnRzIiwibm90ZXMiLCJjcmVhdGVkX2F0IiwidXBkYXRlZF9hdCIsInB1c2giLCJmaW5kIiwidXBkYXRlIiwiaWR4IiwiZmluZEluZGV4IiwiZXhpc3RpbmciLCJ1cGRhdGVkIiwidW5kZWZpbmVkIiwiZGVsZXRlIiwiZGVsZXRlZCIsInNwbGljZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/attendanceFallback.js\n");

/***/ })

};
;