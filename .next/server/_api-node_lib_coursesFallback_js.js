"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_api-node_lib_coursesFallback_js";
exports.ids = ["_api-node_lib_coursesFallback_js"];
exports.modules = {

/***/ "(api-node)/./lib/coursesFallback.js":
/*!********************************!*\
  !*** ./lib/coursesFallback.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst dataFile = path.join(process.cwd(), 'data', 'courses.json');\nfunction ensureFile() {\n    const dir = path.dirname(dataFile);\n    if (!fs.existsSync(dir)) fs.mkdirSync(dir, {\n        recursive: true\n    });\n    if (!fs.existsSync(dataFile)) fs.writeFileSync(dataFile, JSON.stringify({\n        courses: [],\n        nextId: 1\n    }, null, 2));\n}\nfunction read() {\n    ensureFile();\n    return JSON.parse(fs.readFileSync(dataFile, 'utf8'));\n}\nfunction write(obj) {\n    fs.writeFileSync(dataFile, JSON.stringify(obj, null, 2));\n}\nmodule.exports = {\n    list (userId) {\n        const obj = read();\n        return obj.courses.filter((c)=>c.user_id === userId);\n    },\n    create (payload) {\n        const obj = read();\n        const id = String(Date.now());\n        const now = new Date().toISOString();\n        const course = {\n            id,\n            name: payload.name,\n            code: payload.code || null,\n            credits: payload.credits || 3,\n            color: payload.color || '#3B82F6',\n            semester: payload.semester || '2025-1',\n            instructor: payload.instructor || null,\n            description: payload.description || null,\n            user_id: payload.userId,\n            created_at: now,\n            updated_at: now,\n            attendanceSessionsCount: 0\n        };\n        obj.courses.push(course);\n        obj.nextId = (obj.nextId || 0) + 1;\n        write(obj);\n        return course;\n    },\n    find (id) {\n        const obj = read();\n        return obj.courses.find((c)=>c.id === id);\n    },\n    update (id, payload) {\n        const obj = read();\n        const idx = obj.courses.findIndex((c)=>c.id === id);\n        if (idx === -1) return null;\n        const existing = obj.courses[idx];\n        const updated = {\n            ...existing,\n            name: payload.name ?? existing.name,\n            code: payload.code ?? existing.code,\n            credits: payload.credits ?? existing.credits,\n            color: payload.color ?? existing.color,\n            semester: payload.semester ?? existing.semester,\n            instructor: payload.instructor ?? existing.instructor,\n            description: payload.description ?? existing.description,\n            updated_at: new Date().toISOString()\n        };\n        obj.courses[idx] = updated;\n        write(obj);\n        return updated;\n    },\n    delete (id) {\n        const obj = read();\n        const idx = obj.courses.findIndex((c)=>c.id === id);\n        if (idx === -1) return null;\n        const [deleted] = obj.courses.splice(idx, 1);\n        write(obj);\n        return deleted;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0MsWUFBWVosUUFBUVksVUFBVSxJQUFJVSxTQUFTVixVQUFVO1lBQ3JEQyxhQUFhYixRQUFRYSxXQUFXLElBQUlTLFNBQVNULFdBQVc7WUFDeERFLFlBQVksSUFBSVosT0FBT0UsV0FBVztRQUNwQztRQUNBZCxJQUFJTixPQUFPLENBQUNtQyxJQUFJLEdBQUdHO1FBQ25CakMsTUFBTUM7UUFDTixPQUFPZ0M7SUFDVDtJQUNBQyxRQUFPdkIsRUFBRTtRQUNQLE1BQU1WLE1BQU1KO1FBQ1osTUFBTWlDLE1BQU03QixJQUFJTixPQUFPLENBQUNvQyxTQUFTLENBQUN4QixDQUFBQSxJQUFLQSxFQUFFSSxFQUFFLEtBQUtBO1FBQ2hELElBQUltQixRQUFRLENBQUMsR0FBRyxPQUFPO1FBQ3ZCLE1BQU0sQ0FBQ0ssUUFBUSxHQUFHbEMsSUFBSU4sT0FBTyxDQUFDeUMsTUFBTSxDQUFDTixLQUFLO1FBQzFDOUIsTUFBTUM7UUFDTixPQUFPa0M7SUFDVDtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluaXN0cmF0b3JcXERlc2t0b3BcXHVuaXZlcnNpdHktcGxhbm5lclxcbGliXFxjb3Vyc2VzRmFsbGJhY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5cclxuY29uc3QgZGF0YUZpbGUgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2RhdGEnLCAnY291cnNlcy5qc29uJyk7XHJcblxyXG5mdW5jdGlvbiBlbnN1cmVGaWxlKCkge1xyXG4gIGNvbnN0IGRpciA9IHBhdGguZGlybmFtZShkYXRhRmlsZSk7XHJcbiAgaWYgKCFmcy5leGlzdHNTeW5jKGRpcikpIGZzLm1rZGlyU3luYyhkaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xyXG4gIGlmICghZnMuZXhpc3RzU3luYyhkYXRhRmlsZSkpIGZzLndyaXRlRmlsZVN5bmMoZGF0YUZpbGUsIEpTT04uc3RyaW5naWZ5KHsgY291cnNlczogW10sIG5leHRJZDogMSB9LCBudWxsLCAyKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlYWQoKSB7XHJcbiAgZW5zdXJlRmlsZSgpO1xyXG4gIHJldHVybiBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhkYXRhRmlsZSwgJ3V0ZjgnKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHdyaXRlKG9iaikge1xyXG4gIGZzLndyaXRlRmlsZVN5bmMoZGF0YUZpbGUsIEpTT04uc3RyaW5naWZ5KG9iaiwgbnVsbCwgMikpO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBsaXN0KHVzZXJJZCkge1xyXG4gICAgY29uc3Qgb2JqID0gcmVhZCgpO1xyXG4gICAgcmV0dXJuIG9iai5jb3Vyc2VzLmZpbHRlcihjID0+IGMudXNlcl9pZCA9PT0gdXNlcklkKTtcclxuICB9LFxyXG4gIGNyZWF0ZShwYXlsb2FkKSB7XHJcbiAgICBjb25zdCBvYmogPSByZWFkKCk7XHJcbiAgICBjb25zdCBpZCA9IFN0cmluZyhEYXRlLm5vdygpKTtcclxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICAgIGNvbnN0IGNvdXJzZSA9IHtcclxuICAgICAgaWQsXHJcbiAgICAgIG5hbWU6IHBheWxvYWQubmFtZSxcclxuICAgICAgY29kZTogcGF5bG9hZC5jb2RlIHx8IG51bGwsXHJcbiAgICAgIGNyZWRpdHM6IHBheWxvYWQuY3JlZGl0cyB8fCAzLFxyXG4gICAgICBjb2xvcjogcGF5bG9hZC5jb2xvciB8fCAnIzNCODJGNicsXHJcbiAgICAgIHNlbWVzdGVyOiBwYXlsb2FkLnNlbWVzdGVyIHx8ICcyMDI1LTEnLFxyXG4gICAgICBpbnN0cnVjdG9yOiBwYXlsb2FkLmluc3RydWN0b3IgfHwgbnVsbCxcclxuICAgICAgZGVzY3JpcHRpb246IHBheWxvYWQuZGVzY3JpcHRpb24gfHwgbnVsbCxcclxuICAgICAgdXNlcl9pZDogcGF5bG9hZC51c2VySWQsXHJcbiAgICAgIGNyZWF0ZWRfYXQ6IG5vdyxcclxuICAgICAgdXBkYXRlZF9hdDogbm93LFxyXG4gICAgICBhdHRlbmRhbmNlU2Vzc2lvbnNDb3VudDogMFxyXG4gICAgfTtcclxuICAgIG9iai5jb3Vyc2VzLnB1c2goY291cnNlKTtcclxuICAgIG9iai5uZXh0SWQgPSAob2JqLm5leHRJZCB8fCAwKSArIDE7XHJcbiAgICB3cml0ZShvYmopO1xyXG4gICAgcmV0dXJuIGNvdXJzZTtcclxuICB9LFxyXG4gIGZpbmQoaWQpIHtcclxuICAgIGNvbnN0IG9iaiA9IHJlYWQoKTtcclxuICAgIHJldHVybiBvYmouY291cnNlcy5maW5kKGMgPT4gYy5pZCA9PT0gaWQpO1xyXG4gIH0sXHJcbiAgdXBkYXRlKGlkLCBwYXlsb2FkKSB7XHJcbiAgICBjb25zdCBvYmogPSByZWFkKCk7XHJcbiAgICBjb25zdCBpZHggPSBvYmouY291cnNlcy5maW5kSW5kZXgoYyA9PiBjLmlkID09PSBpZCk7XHJcbiAgICBpZiAoaWR4ID09PSAtMSkgcmV0dXJuIG51bGw7XHJcbiAgICBjb25zdCBleGlzdGluZyA9IG9iai5jb3Vyc2VzW2lkeF07XHJcbiAgICBjb25zdCB1cGRhdGVkID0ge1xyXG4gICAgICAuLi5leGlzdGluZyxcclxuICAgICAgbmFtZTogcGF5bG9hZC5uYW1lID8/IGV4aXN0aW5nLm5hbWUsXHJcbiAgICAgIGNvZGU6IHBheWxvYWQuY29kZSA/PyBleGlzdGluZy5jb2RlLFxyXG4gICAgICBjcmVkaXRzOiBwYXlsb2FkLmNyZWRpdHMgPz8gZXhpc3RpbmcuY3JlZGl0cyxcclxuICAgICAgY29sb3I6IHBheWxvYWQuY29sb3IgPz8gZXhpc3RpbmcuY29sb3IsXHJcbiAgICAgIHNlbWVzdGVyOiBwYXlsb2FkLnNlbWVzdGVyID8/IGV4aXN0aW5nLnNlbWVzdGVyLFxyXG4gICAgICBpbnN0cnVjdG9yOiBwYXlsb2FkLmluc3RydWN0b3IgPz8gZXhpc3RpbmcuaW5zdHJ1Y3RvcixcclxuICAgICAgZGVzY3JpcHRpb246IHBheWxvYWQuZGVzY3JpcHRpb24gPz8gZXhpc3RpbmcuZGVzY3JpcHRpb24sXHJcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgfTtcclxuICAgIG9iai5jb3Vyc2VzW2lkeF0gPSB1cGRhdGVkO1xyXG4gICAgd3JpdGUob2JqKTtcclxuICAgIHJldHVybiB1cGRhdGVkO1xyXG4gIH0sXHJcbiAgZGVsZXRlKGlkKSB7XHJcbiAgICBjb25zdCBvYmogPSByZWFkKCk7XHJcbiAgICBjb25zdCBpZHggPSBvYmouY291cnNlcy5maW5kSW5kZXgoYyA9PiBjLmlkID09PSBpZCk7XHJcbiAgICBpZiAoaWR4ID09PSAtMSkgcmV0dXJuIG51bGw7XHJcbiAgICBjb25zdCBbZGVsZXRlZF0gPSBvYmouY291cnNlcy5zcGxpY2UoaWR4LCAxKTtcclxuICAgIHdyaXRlKG9iaik7XHJcbiAgICByZXR1cm4gZGVsZXRlZDtcclxuICB9XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwiZGF0YUZpbGUiLCJqb2luIiwicHJvY2VzcyIsImN3ZCIsImVuc3VyZUZpbGUiLCJkaXIiLCJkaXJuYW1lIiwiZXhpc3RzU3luYyIsIm1rZGlyU3luYyIsInJlY3Vyc2l2ZSIsIndyaXRlRmlsZVN5bmMiLCJKU09OIiwic3RyaW5naWZ5IiwiY291cnNlcyIsIm5leHRJZCIsInJlYWQiLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsIndyaXRlIiwib2JqIiwibW9kdWxlIiwiZXhwb3J0cyIsImxpc3QiLCJ1c2VySWQiLCJmaWx0ZXIiLCJjIiwidXNlcl9pZCIsImNyZWF0ZSIsInBheWxvYWQiLCJpZCIsIlN0cmluZyIsIkRhdGUiLCJub3ciLCJ0b0lTT1N0cmluZyIsImNvdXJzZSIsIm5hbWUiLCJjb2RlIiwiY3JlZGl0cyIsImNvbG9yIiwic2VtZXN0ZXIiLCJpbnN0cnVjdG9yIiwiZGVzY3JpcHRpb24iLCJjcmVhdGVkX2F0IiwidXBkYXRlZF9hdCIsImF0dGVuZGFuY2VTZXNzaW9uc0NvdW50IiwicHVzaCIsImZpbmQiLCJ1cGRhdGUiLCJpZHgiLCJmaW5kSW5kZXgiLCJleGlzdGluZyIsInVwZGF0ZWQiLCJkZWxldGUiLCJkZWxldGVkIiwic3BsaWNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./lib/coursesFallback.js\n");

/***/ })

};
;