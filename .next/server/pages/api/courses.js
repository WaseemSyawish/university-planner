"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/courses";
exports.ids = ["pages/api/courses"];
exports.modules = {

/***/ "(api-node)/./lib/prisma.js":
/*!***********************!*\
  !*** ./lib/prisma.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Shared Prisma client to avoid creating/disconnecting clients per-request\n\nconst { PrismaClient } = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n// Use Node's global object for compatibility with ESLint environments\nconst globalForPrisma = global;\nlet prisma;\nif (!globalForPrisma.__prisma) {\n    globalForPrisma.__prisma = new PrismaClient();\n}\nprisma = globalForPrisma.__prisma;\nmodule.exports = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9wcmlzbWEuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkVBQTJFOztBQUMzRSxNQUFNLEVBQUVBLFlBQVksRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQyxzQ0FBZ0I7QUFFakQsc0VBQXNFO0FBQ3RFLE1BQU1DLGtCQUFrQkM7QUFFeEIsSUFBSUM7QUFDSixJQUFJLENBQUNGLGdCQUFnQkcsUUFBUSxFQUFFO0lBQzdCSCxnQkFBZ0JHLFFBQVEsR0FBRyxJQUFJTDtBQUNqQztBQUVBSSxTQUFTRixnQkFBZ0JHLFFBQVE7QUFFakNDLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYXRvclxcRGVza3RvcFxcdW5pdmVyc2l0eS1wbGFubmVyXFxsaWJcXHByaXNtYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaGFyZWQgUHJpc21hIGNsaWVudCB0byBhdm9pZCBjcmVhdGluZy9kaXNjb25uZWN0aW5nIGNsaWVudHMgcGVyLXJlcXVlc3RcclxuY29uc3QgeyBQcmlzbWFDbGllbnQgfSA9IHJlcXVpcmUoJ0BwcmlzbWEvY2xpZW50Jyk7XHJcblxyXG4vLyBVc2UgTm9kZSdzIGdsb2JhbCBvYmplY3QgZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBFU0xpbnQgZW52aXJvbm1lbnRzXHJcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbDtcclxuXHJcbmxldCBwcmlzbWE7XHJcbmlmICghZ2xvYmFsRm9yUHJpc21hLl9fcHJpc21hKSB7XHJcbiAgZ2xvYmFsRm9yUHJpc21hLl9fcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG59XHJcblxyXG5wcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEuX19wcmlzbWE7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHByaXNtYTtcclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInJlcXVpcmUiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWwiLCJwcmlzbWEiLCJfX3ByaXNtYSIsIm1vZHVsZSIsImV4cG9ydHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./lib/prisma.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcourses&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccourses%5Cindex.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcourses&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccourses%5Cindex.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_courses_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\courses\\index.js */ \"(api-node)/./pages/api/courses/index.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_courses_index_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_courses_index_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/courses\",\n        pathname: \"/api/courses\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_courses_index_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/courses\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/courses\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcourses&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccourses%5Cindex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/courses/index.js":
/*!************************************!*\
  !*** ./pages/api/courses/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst prisma = __webpack_require__(/*! ../../../lib/prisma */ \"(api-node)/./lib/prisma.js\");\nasync function resolveUserId(req) {\n    try {\n        const { getToken } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! next-auth/jwt */ \"next-auth/jwt\", 23));\n        const token = await getToken({\n            req,\n            secret: process.env.NEXTAUTH_SECRET || 'dev-nextauth-secret'\n        });\n        const tokenUserId = token && token.userId ? token.userId : null;\n        if (!tokenUserId) return null;\n        return tokenUserId;\n    } catch (err) {\n        console.error('resolveUserId error', err);\n        return null;\n    }\n}\nasync function handler(req, res) {\n    if (req.method === 'OPTIONS') {\n        res.setHeader('Allow', 'GET,POST,PUT,DELETE,OPTIONS');\n        return res.status(204).end();\n    }\n    if (req.method === 'GET') {\n        try {\n            const userId = await resolveUserId(req);\n            if (!userId) return res.status(401).json({\n                success: false,\n                error: 'Not authenticated'\n            });\n            const where = {\n                user_id: userId\n            };\n            let courses = await prisma.course.findMany({\n                where,\n                orderBy: {\n                    name: 'asc'\n                }\n            });\n            // normalize color tokens to an inline hex fallback for client convenience\n            const tailwindToHex = {\n                'indigo-500': '#6366F1',\n                'blue-500': '#3B82F6',\n                'green-500': '#10B981',\n                'red-500': '#EF4444',\n                'yellow-500': '#F59E0B',\n                'gray-500': '#6B7280',\n                'purple-500': '#8B5CF6',\n                'pink-500': '#EC4899',\n                'teal-500': '#14B8A6'\n            };\n            const normalize = (c)=>{\n                try {\n                    const v = c && c.color ? String(c.color).trim() : '';\n                    if (!v) return {\n                        ...c,\n                        colorHex: null\n                    };\n                    if (v.startsWith('#') || v.startsWith('rgb')) return {\n                        ...c,\n                        colorHex: v\n                    };\n                    if (v.startsWith('bg-')) {\n                        const key = v.replace(/^bg-/, '');\n                        return {\n                            ...c,\n                            colorHex: tailwindToHex[key] || null\n                        };\n                    }\n                    // shorthand token like 'indigo-500'\n                    if (/^[a-z]+-\\d{3,4}$/i.test(v)) {\n                        return {\n                            ...c,\n                            colorHex: tailwindToHex[v] || null\n                        };\n                    }\n                    // otherwise treat as color name\n                    return {\n                        ...c,\n                        colorHex: v\n                    };\n                } catch (e) {\n                    return {\n                        ...c,\n                        colorHex: null\n                    };\n                }\n            };\n            courses = courses.map(normalize);\n            return res.status(200).json({\n                success: true,\n                courses\n            });\n        } catch (err) {\n            console.error('GET /api/courses error', err);\n            return res.status(500).json({\n                success: false,\n                error: 'Failed to fetch courses'\n            });\n        }\n    }\n    if (req.method === 'POST') {\n        try {\n            const { name, professor, instructor, color, credits, semester, code, description } = req.body || {};\n            const userId = await resolveUserId(req);\n            if (!userId) return res.status(401).json({\n                success: false,\n                error: 'Not authenticated'\n            });\n            const created = await prisma.course.create({\n                data: {\n                    name,\n                    code: code || null,\n                    instructor: instructor ?? professor ?? null,\n                    color: color || null,\n                    credits: Number.isFinite(Number(credits)) ? Number(credits) : 3,\n                    semester: semester || null,\n                    description: description || null,\n                    user_id: userId\n                }\n            });\n            // attach colorHex for convenience\n            const tailwindToHex = {\n                'indigo-500': '#6366F1',\n                'blue-500': '#3B82F6',\n                'green-500': '#10B981',\n                'red-500': '#EF4444',\n                'yellow-500': '#F59E0B',\n                'gray-500': '#6B7280',\n                'purple-500': '#8B5CF6',\n                'pink-500': '#EC4899',\n                'teal-500': '#14B8A6'\n            };\n            let colorHex = null;\n            try {\n                const v = created && created.color ? String(created.color).trim() : '';\n                if (v) {\n                    if (v.startsWith('#') || v.startsWith('rgb')) colorHex = v;\n                    else if (v.startsWith('bg-')) colorHex = tailwindToHex[v.replace(/^bg-/, '')] || null;\n                    else if (/^[a-z]+-\\d{3,4}$/i.test(v)) colorHex = tailwindToHex[v] || null;\n                    else colorHex = v;\n                }\n            } catch (e) {\n                colorHex = null;\n            }\n            return res.status(201).json({\n                success: true,\n                course: {\n                    ...created,\n                    colorHex\n                }\n            });\n        } catch (err) {\n            console.error('POST /api/courses error', err);\n            return res.status(500).json({\n                success: false,\n                error: 'Failed to create course'\n            });\n        }\n    }\n    if (req.method === 'PUT') {\n        try {\n            const { id, name, professor, color, credits, semester, instructor, description } = req.body;\n            if (!id) return res.status(400).json({\n                success: false,\n                error: 'Missing course id'\n            });\n            const userId = await resolveUserId(req);\n            if (!userId) return res.status(401).json({\n                success: false,\n                error: 'Not authenticated'\n            });\n            // ensure course belongs to user\n            const existing = await prisma.course.findUnique({\n                where: {\n                    id\n                }\n            });\n            if (!existing) return res.status(404).json({\n                success: false,\n                error: 'Course not found'\n            });\n            if (existing.user_id !== userId) {\n                return res.status(403).json({\n                    success: false,\n                    error: 'Not authorized to edit this course'\n                });\n            }\n            const updated = await prisma.course.update({\n                where: {\n                    id\n                },\n                data: {\n                    name: name ?? existing.name,\n                    instructor: instructor ?? professor ?? existing.instructor,\n                    color: color ?? existing.color,\n                    credits: credits ?? existing.credits,\n                    semester: semester ?? existing.semester,\n                    description: description ?? existing.description\n                }\n            });\n            // attach normalized colorHex\n            const tailwindToHex = {\n                'indigo-500': '#6366F1',\n                'blue-500': '#3B82F6',\n                'green-500': '#10B981',\n                'red-500': '#EF4444',\n                'yellow-500': '#F59E0B',\n                'gray-500': '#6B7280',\n                'purple-500': '#8B5CF6',\n                'pink-500': '#EC4899',\n                'teal-500': '#14B8A6'\n            };\n            let colorHex = null;\n            try {\n                const v = updated && updated.color ? String(updated.color).trim() : '';\n                if (v) {\n                    if (v.startsWith('#') || v.startsWith('rgb')) colorHex = v;\n                    else if (v.startsWith('bg-')) colorHex = tailwindToHex[v.replace(/^bg-/, '')] || null;\n                    else if (/^[a-z]+-\\d{3,4}$/i.test(v)) colorHex = tailwindToHex[v] || null;\n                    else colorHex = v;\n                }\n            } catch (e) {\n                colorHex = null;\n            }\n            return res.status(200).json({\n                success: true,\n                course: {\n                    ...updated,\n                    colorHex\n                }\n            });\n        } catch (err) {\n            console.error('PUT /api/courses error', err);\n            return res.status(500).json({\n                success: false,\n                error: 'Failed to update course'\n            });\n        }\n    }\n    if (req.method === 'DELETE') {\n        try {\n            const { id } = req.body || {};\n            if (!id) return res.status(400).json({\n                success: false,\n                error: 'Missing course id'\n            });\n            const userId = await resolveUserId(req);\n            if (!userId) return res.status(401).json({\n                success: false,\n                error: 'Not authenticated'\n            });\n            const existing = await prisma.course.findUnique({\n                where: {\n                    id\n                }\n            });\n            if (!existing) return res.status(404).json({\n                success: false,\n                error: 'Course not found'\n            });\n            if (existing.user_id !== userId) {\n                return res.status(403).json({\n                    success: false,\n                    error: 'Not authorized to delete this course'\n                });\n            }\n            await prisma.course.delete({\n                where: {\n                    id\n                }\n            });\n            return res.status(200).json({\n                success: true,\n                message: 'Course deleted'\n            });\n        } catch (err) {\n            console.error('DELETE /api/courses error', err);\n            return res.status(500).json({\n                success: false,\n                error: 'Failed to delete course'\n            });\n        }\n    }\n    res.setHeader('Allow', 'GET,POST,PUT,DELETE,OPTIONS');\n    res.status(405).end();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/courses/index.js\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next-auth/jwt":
/*!********************************!*\
  !*** external "next-auth/jwt" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("next-auth/jwt");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcourses&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ccourses%5Cindex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();